{"version":3,"sources":["api/todos.ts","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","UserInfo","user","className","href","TodoInfo","key","todo","cn","usersFromServer","find","TodoList","todos","map","App","useState","todosFromServer","setTodos","setTitle","selectedUserId","setSelectedUserId","userError","setUserError","titleError","setTitleError","action","method","onSubmit","event","preventDefault","allTodos","newTodo","Math","max","htmlFor","type","placeholder","value","onChange","newValue","target","split","filter","el","test","join","defaultValue","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eaa997bc.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export interface User {\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n}\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo = ({ user }: Props) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { User, UserInfo } from '../UserInfo';\nimport usersFromServer from '../../api/users';\n\nexport interface Todo {\n  id: number,\n  completed: boolean,\n  title: string,\n  userId: number,\n}\n\nexport interface Props {\n  key: number,\n  todo: Todo,\n}\n\nconst getUserById = (id: number): User => {\n  return usersFromServer.find(user => user.id === id) as User;\n};\n\nexport const TodoInfo = ({\n  key,\n  todo,\n}: Props) => (\n  <article\n    key={key}\n    data-id={todo.id}\n    className={cn('TodoInfo', {\n      'TodoInfo--completed': todo.completed,\n    })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    <UserInfo user={getUserById(todo.userId)} />\n  </article>\n);\n","import { Todo, TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList = ({ todos }: Props) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './components/TodoInfo';\n\nconst getNewTodoId = (allTodos: Todo[]): number => {\n  return Math.max(...allTodos.map(todo => todo.id)) + 1;\n};\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n  const [title, setTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [userError, setUserError] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n    setUserError(false);\n  };\n\n  const handleTitleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value\n      .split('')\n      .filter(el => {\n        const regExpEng = /[A-Za-z]/gi;\n        const regExpUa = /[А-ЕЖ-ЩЬЮЯЄҐІЇа-еж-щьюяєґії]/gi;\n        const regExpDigAndSpace = /[0-9]| /gi;\n\n        return regExpEng.test(el)\n          || regExpUa.test(el)\n          || regExpDigAndSpace.test(el);\n      })\n      .join('');\n\n    setTitle(newValue);\n    setTitleError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (selectedUserId < 1) {\n      setUserError(true);\n    }\n\n    if (!title || selectedUserId < 1) {\n      return;\n    }\n\n    const newTodo = {\n      id: getNewTodoId(todos),\n      title,\n      completed: false,\n      userId: selectedUserId,\n    };\n\n    setTodos([\n      ...todos,\n      newTodo,\n    ]);\n    setSelectedUserId(0);\n    setTitle('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title:</label>\n          &nbsp;\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleInput}\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User:</label>\n          &nbsp;\n          <select\n            id=\"user\"\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            defaultValue={0}\n            onChange={handleUserSelect}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.username}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}